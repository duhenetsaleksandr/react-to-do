// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render App component App component snapshot should render App component snapshot if fetch data from API fail 1`] = `
<ContextProvider
  value={
    Object {
      "darkTheme": true,
      "switchTheme": [Function],
    }
  }
>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en-US"
    fallbackOnEmptyString={true}
    formats={Object {}}
    locale="en-US"
    messages={
      Object {
        "button_add": "Add task",
        "button_edit": "Edit task",
        "copyright": "©Copyright. All rights deserved.",
        "placeholder": "Enter new todo",
      }
    }
    onError={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <div
      className="wrapper"
    >
      <Header
        currentLang="en-US"
        onChangeLocale={[Function]}
      />
      <Main
        createTodo={[Function]}
        deleteTodo={[Function]}
        editTodo={[Function]}
        todos={Array []}
        toggleTodo={[Function]}
      />
      <Footer />
    </div>
  </IntlProvider>
</ContextProvider>
`;

exports[`should render App component App component snapshot should render App component snapshot if fetch data from API success 1`] = `
<ContextProvider
  value={
    Object {
      "darkTheme": true,
      "switchTheme": [Function],
    }
  }
>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en-US"
    fallbackOnEmptyString={true}
    formats={Object {}}
    locale="en-US"
    messages={
      Object {
        "button_add": "Add task",
        "button_edit": "Edit task",
        "copyright": "©Copyright. All rights deserved.",
        "placeholder": "Enter new todo",
      }
    }
    onError={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <div
      className="wrapper"
    >
      <Header
        currentLang="en-US"
        onChangeLocale={[Function]}
      />
      <Main
        createTodo={[Function]}
        deleteTodo={[Function]}
        editTodo={[Function]}
        todos={Array []}
        toggleTodo={[Function]}
      />
      <Footer />
    </div>
  </IntlProvider>
</ContextProvider>
`;
